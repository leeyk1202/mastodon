{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["flattenMedia","data","localMax","Math","max","apply","map","a","favourites_count","reblogs_count","reduce","arr","cur","concat","media_attachments","filter","type","Object","assign","status","highlighted","length","lastId","id","defaultConfig","title","baseURL","hashtag","onlyLocal","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","config","initialized","loading","items","nextId","axios","handleScroll","bind","assertThisInitialized","loadMore","loadInitialPage","setupAxios","pagePath","nextPageParams","_this2","get","then","_ref","setState","catch","window","addEventListener","arguments","undefined","create","_document$documentEle","document","documentElement","scrollHeight","scrollTop","clientHeight","_this3","params","_ref2","_this$state","local","only_media","max_id","_this4","_ref3","item","previewUrl","preview_url","previewWidth","meta","small","width","originalUrl","url","originalWidth","original","displayName","account","display_name","trim","acct","split","react_default","createElement","key","className","classNames","item--larger","src","srcSet","sizes","alt","description","href","target","rel","avatar","height","_this5","_this$state2","Helmet","lib_default","options","itemSelector","columnWidth","percentPosition","renderItem","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uRAOMA,EAAe,SAAAC,GACnB,IAAMC,EAAWC,KAAKC,IAAIC,MAAM,KAAMJ,EAAKK,IAAI,SAAAC,GAAC,OAAIA,EAAEC,iBAAmBD,EAAEE,iBAC3E,OAAOR,EAAKS,OAAO,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAAOD,EAAIE,kBAAkBC,OAAO,SAAAR,GAAC,MAAe,UAAXA,EAAES,OAAkBV,IAAI,SAAAC,GAAC,OAAIU,OAAOC,OAAO,GAAIX,EAAG,CAAEY,OAAQP,EAAKQ,YAA8C,IAAjCR,EAAIE,kBAAkBO,QAAiBT,EAAIJ,iBAAmBI,EAAIH,eAAiBP,QAAgB,KAG3PoB,EAAS,SAAArB,GAAI,OAAIA,EAAKoB,OAAS,GAAIpB,EAAKA,EAAKoB,OAAS,GAAGE,IAEzDC,EAAgB,CACpBC,MAAO,UACPC,QAAS,IACTC,SAAS,EACTC,WAAW,GA0JEC,cArJb,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAJ,IAClBE,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAY,GAAAO,KAAAH,KAAMH,KAWRO,MAAQ,CACNC,OAAQd,EACRe,aAAa,EACbC,SAAS,EACTC,MAAO,GACPC,QAAQ,GAdRX,EAAKY,MAAkB,KACvBZ,EAAKa,aAAkBb,EAAKa,aAAaC,KAAlB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAc,KACvBA,EAAKgB,SAAkBhB,EAAKgB,SAASF,KAAd5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAc,KACvBA,EAAKiB,gBAAkBjB,EAAKiB,gBAAgBH,KAArB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAc,KACvBA,EAAKkB,WAAkBlB,EAAKkB,WAAWJ,KAAhB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAc,KACvBA,EAAKmB,SAAkBnB,EAAKmB,SAASL,KAAd5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAc,KACvBA,EAAKoB,eAAkBpB,EAAKoB,eAAeN,KAApB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAc,KATLA,mFAoBC,IAAAqB,EAAAnB,KACnBU,IAAMU,IAAI,eAAeC,KAAK,SAAAC,GAAc,IAAXtD,EAAWsD,EAAXtD,KAE/B,OADAmD,EAAKI,SAAS,CAAElB,OAAQrC,IACjBA,IACNwD,MAAM,cAAUH,KAAK,SAAAhB,GACtBc,EAAKH,WAAWX,GAChBc,EAAKJ,oBAGPU,OAAOC,iBAAiB,SAAU1B,KAAKW,mDAGL,IAAxBN,EAAwBsB,UAAAvC,OAAA,QAAAwC,IAAAD,UAAA,GAAAA,UAAA,GAAfpC,EACnBS,KAAKU,MAAQA,IAAMmB,OAAO,CACxBpC,QAASY,EAAOZ,iDAIJ,IAAAqC,EACoCC,SAASC,gBAD7CF,EACNG,aADMH,EACQI,UADRJ,EACmBK,aAGrB,KAAOnC,KAAKI,MAAMK,SAAWT,KAAKI,MAAMG,SAClDP,KAAKc,qDAIU,IAAAsB,EAAApC,KACjBA,KAAKU,MAAMU,IAAIpB,KAAKiB,WAAY,CAAEoB,OAAQrC,KAAKkB,mBAAoBG,KAAK,SAAAiB,GAAa,IAAVtE,EAAUsE,EAAVtE,KACzEoE,EAAKb,SAAS,CACZf,MAAOzC,EAAaC,GACpBuC,SAAS,EACTE,OAAQpB,EAAOrB,GACfsC,aAAa,yCAKP,IACFZ,EAAYM,KAAKI,MAAMC,OAAvBX,QAER,OAAIA,EACF,yBAAAd,OAAgCc,GAEzB,oEAGO,IAAA6C,EAC0BvC,KAAKI,MAE/C,MAAO,CACLoC,MAJcD,EACRlC,OAAUV,UAIhB8C,YAAY,EACZC,OANcH,EACe9B,aAKXmB,sCAIV,IAAAe,EAAA3C,KACLA,KAAKI,MAAMK,SAIhBT,KAAKuB,SAAS,CAAEhB,SAAS,IAEzBP,KAAKU,MAAMU,IAAIpB,KAAKiB,WAAY,CAAEoB,OAAQrC,KAAKkB,mBAAoBG,KAAK,SAAAuB,GAAc,IAAX5E,EAAW4E,EAAX5E,KACzE2E,EAAKpB,SAAS,CACZf,MAAOmC,EAAKvC,MAAMI,MAAM5B,OAAOb,EAAaC,IAC5CuC,SAAS,EACTE,OAAQpB,EAAOrB,2CAKT6E,GACV,IAAMC,EAAgBD,EAAKE,YACrBC,EAAgBH,EAAKI,KAAKC,MAAMC,MAChCC,EAAgBP,EAAKQ,IACrBC,EAAgBT,EAAKI,KAAKM,SAASJ,MACnCK,EAAgBX,EAAK3D,OAAOuE,QAAQC,aAAaC,OAAOvE,OAAS,EAAIyD,EAAK3D,OAAOuE,QAAQC,aAAeb,EAAK3D,OAAOuE,QAAQG,KAAKC,MAAM,KAAK,GAElJ,OACEC,EAAAxF,EAAAyF,cAAA,OAAKC,IAAKZ,EAAaa,UAAWC,IAAW,OAAQ,CAAEC,eAAgBtB,EAAK1D,eAC1E2E,EAAAxF,EAAAyF,cAAA,OAAKE,UAAU,cAAcG,IAAKtB,EAAYuB,OAAM,GAAAzF,OAAKwE,EAAL,KAAAxE,OAAoB0E,EAApB,OAAA1E,OAAuCkE,EAAvC,KAAAlE,OAAqDoE,EAArD,KAAsEsB,MAAOzB,EAAK1D,YAAc,oBAAsB,oBAAqBoF,IAAK1B,EAAK2B,cAEzMV,EAAAxF,EAAAyF,cAAA,KAAGE,UAAU,eAAeQ,KAAM5B,EAAK3D,OAAOmE,IAAKqB,OAAO,SAASC,IAAI,uBACrEb,EAAAxF,EAAAyF,cAAA,OAAKK,IAAKvB,EAAK3D,OAAOuE,QAAQmB,OAAQL,IAAK1B,EAAK3D,OAAOuE,QAAQG,KAAMT,MAAO,GAAI0B,OAAQ,KAExFf,EAAAxF,EAAAyF,cAAA,WACED,EAAAxF,EAAAyF,cAAA,WAAMP,GADR,IAEIX,EAAK3D,OAAOuE,QAAQG,yCAOvB,IAAAkB,EAAA9E,KAAA+E,EACgC/E,KAAKI,MAApCE,EADDyE,EACCzE,YAAaE,EADduE,EACcvE,MAAOH,EADrB0E,EACqB1E,OAE5B,IAAKC,EACH,OACEwD,EAAAxF,EAAAyF,cAAA,OAAKE,UAAU,WACbH,EAAAxF,EAAAyF,cAAA,2BAWN,OACED,EAAAxF,EAAAyF,cAAA,OAAKE,UAAU,QACbH,EAAAxF,EAAAyF,cAACiB,EAAA,OAAD,KACElB,EAAAxF,EAAAyF,cAAA,aAAQ1D,EAAOb,QAGjBsE,EAAAxF,EAAAyF,cAACkB,EAAA3G,EAAD,CAAS4G,QAZG,CACdC,aAAc,QACdC,YAAa,SACbC,iBAAiB,IAUbvB,EAAAxF,EAAAyF,cAAA,OAAKE,UAAU,UAEdzD,EAAMnC,IAAI,SAAAwE,GAAI,OAAIiC,EAAKQ,WAAWzC,cAhJ3B0C,aCTZC,EAAcC,QACW,cAA7BhE,OAAOiE,SAASC,UAEe,UAA7BlE,OAAOiE,SAASC,UAEhBlE,OAAOiE,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOzF,GAC9B0F,UAAUC,cACPC,SAASH,GACTzE,KAAK,SAAA6E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhG,QACf2F,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,gHAKEpG,GAAUA,EAAOqG,UACnBrG,EAAOqG,SAASR,KAMlBM,QAAQC,IAAI,sCAGRpG,GAAUA,EAAOsG,WACnBtG,EAAOsG,UAAUT,UAO5B1E,MAAM,SAAAoF,GACLJ,QAAQI,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAOhD,EAAAxF,EAAAyF,cAACgD,EAAD,MAAShF,SAASiF,eAAe,SDgB1C,SAAkB3G,GACvB,GAA6C,kBAAmB0F,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,IAAwBzF,OAAOiE,SAASjB,MACpD0C,SAAW1F,OAAOiE,SAASyB,OAIvC,OAGF1F,OAAOC,iBAAiB,OAAQ,WAC9B,IAAMoE,EAAK,GAAAlH,OAAMsI,IAAN,sBAEP1B,GAgEV,SAAiCM,EAAOzF,GAEtC+G,MAAMtB,GACHzE,KAAK,SAAAgG,GAEJ,IAAMC,EAAcD,EAASE,QAAQnG,IAAI,gBAEnB,MAApBiG,EAASnI,QACO,MAAfoI,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMpG,KAAK,SAAA6E,GACjCA,EAAawB,aAAarG,KAAK,WAC7BI,OAAOiE,SAASiC,aAKpB9B,EAAgBC,EAAOzF,KAG1BmB,MAAM,WACLgF,QAAQC,IACN,mEArFAmB,CAAwB9B,EAAOzF,GAI/B0F,UAAUC,cAAcyB,MAAMpG,KAAK,WACjCmF,QAAQC,IACN,+GAMJZ,EAAgBC,EAAOzF,MCvC/B2F","file":"static/js/main.7c3533d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Masonry from 'react-masonry-component';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\n\nconst flattenMedia = data => {\n  const localMax = Math.max.apply(null, data.map(a => a.favourites_count + a.reblogs_count));\n  return data.reduce((arr, cur) => arr.concat(cur.media_attachments.filter(a => a.type === 'image').map(a => Object.assign({}, a, { status: cur, highlighted: cur.media_attachments.length === 1 && (cur.favourites_count + cur.reblogs_count >= localMax) }))), []);\n};\n\nconst lastId = data => data.length > 0 ? data[data.length - 1].id : false;\n\nconst defaultConfig = {\n  title: 'Gallery',\n  baseURL: '/',\n  hashtag: false,\n  onlyLocal: true,\n};\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n\n    this.axios           = null;\n    this.handleScroll    = this.handleScroll.bind(this);\n    this.loadMore        = this.loadMore.bind(this);\n    this.loadInitialPage = this.loadInitialPage.bind(this);\n    this.setupAxios      = this.setupAxios.bind(this);\n    this.pagePath        = this.pagePath.bind(this);\n    this.nextPageParams  = this.nextPageParams.bind(this);\n  }\n\n  state = {\n    config: defaultConfig,\n    initialized: false,\n    loading: true,\n    items: [],\n    nextId: false,\n  };\n\n  componentDidMount () {\n    axios.get('config.json').then(({ data }) => {\n      this.setState({ config: data });\n      return data;\n    }).catch(() => {}).then(config => {\n      this.setupAxios(config);\n      this.loadInitialPage();\n    });\n\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  setupAxios (config = defaultConfig) {\n    this.axios = axios.create({\n      baseURL: config.baseURL,\n    });\n  }\n\n  handleScroll () {\n    const { scrollHeight, scrollTop, clientHeight } = document.documentElement;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if(offset < 400 && this.state.nextId && !this.state.loading) {\n      this.loadMore();\n    }\n  }\n\n  loadInitialPage () {\n    this.axios.get(this.pagePath(), { params: this.nextPageParams() }).then(({ data })=> {\n      this.setState({\n        items: flattenMedia(data),\n        loading: false,\n        nextId: lastId(data),\n        initialized: true,\n      });\n    });\n  }\n\n  pagePath () {\n    const { hashtag } = this.state.config;\n\n    if (hashtag) {\n      return `/api/v1/timelines/tag/${hashtag}`;\n    } else {\n      return '/api/v1/timelines/public';\n    }\n  }\n  nextPageParams () {\n    const { config: { onlyLocal }, nextId } = this.state;\n\n    return {\n      local: onlyLocal,\n      only_media: true,\n      max_id: nextId || undefined,\n    };\n  }\n\n  loadMore () {\n    if (!this.state.nextId) {\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.axios.get(this.pagePath(), { params: this.nextPageParams() }).then(({ data }) => {\n      this.setState({\n        items: this.state.items.concat(flattenMedia(data)),\n        loading: false,\n        nextId: lastId(data),\n      })\n    });\n  }\n\n  renderItem (item) {\n    const previewUrl    = item.preview_url;\n    const previewWidth  = item.meta.small.width;\n    const originalUrl   = item.url;\n    const originalWidth = item.meta.original.width;\n    const displayName   = item.status.account.display_name.trim().length > 0 ? item.status.account.display_name : item.status.account.acct.split('@')[0];\n\n    return (\n      <div key={originalUrl} className={classNames('item', { 'item--larger': item.highlighted })}>\n        <img className='item__image' src={previewUrl} srcSet={`${originalUrl} ${originalWidth}w, ${previewUrl} ${previewWidth}w`} sizes={item.highlighted ? 'calc(0.4 * 100vw)' : 'calc(0.2 * 100vw)'} alt={item.description} />\n\n        <a className='item__source' href={item.status.url} target='_blank' rel='noopener noreferrer'>\n          <img src={item.status.account.avatar} alt={item.status.account.acct} width={36} height={36} />\n\n          <div>\n            <bdi>{displayName}</bdi>\n            @{item.status.account.acct}\n          </div>\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    const { initialized, items, config } = this.state;\n\n    if (!initialized) {\n      return (\n        <div className='loading'>\n          <p>Loading&hellip;</p>\n        </div>\n      );\n    }\n\n    const options = {\n      itemSelector: '.item',\n      columnWidth: '.sizer',\n      percentPosition: true,\n    };\n\n    return (\n      <div className='grid'>\n        <Helmet>\n          <title>{config.title}</title>\n        </Helmet>\n\n        <Masonry options={options}>\n          <div className='sizer' />\n\n          {items.map(item => this.renderItem(item))}\n        </Masonry>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}