name: Build base container image
on:
  schedule:
    - cron: '0 1 * * *' # run at 1 AM UTC
  workflow_call:
    inputs:
      docker_platforms:
        description: 'Platforms to build image'
        type: string
        default: linux/amd64,linux/arm64
      docker_cache:
        description: 'Cache Docker build to GitHub Action'
        type: boolean
        default: true
      docker_tags:
        description: 'Tags to build image'
        type: string
        default: |
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=sha
    outputs:
      docker_digest:
        value: ${{ jobs.build-image.outputs.docker_digest }}
  workflow_dispatch:
    inputs:
      docker_platforms:
        description: 'Platforms to build image'
        type: string
        default: linux/amd64,linux/arm64
      docker_cache:
        description: 'Cache Docker build to GitHub Action'
        type: boolean
        default: true

permissions:
  contents: read
  packages: write

jobs:
  build-image:
    runs-on: ubuntu-latest

    outputs:
      docker_digest: ${{ steps.build.outputs.digest }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}/base
          tags: ${{ inputs.docker_tags }}

      - uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          file: ./Dockerfile.base
          platforms: ${{ inputs.docker_platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ inputs.docker_cache && 'type=gha' || '' }}
          cache-to: ${{ inputs.docker_cache && 'type=gha,mode=max' || '' }}
