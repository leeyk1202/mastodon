workflow:
  rules:
    # Don't run for upstream branch
    - if: $CI_COMMIT_BRANCH	!= "main"

services:
  - docker:20-dind

docker-build:
  image: docker:20-git
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
    NAME_SUFFIX_SHA: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
    UPSTREAM_IMAGE: docker.io/tootsuite/mastodon
    GIT_DEPTH: "200"
  before_script:
    - |
      if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
        export DOCKER_HOST='tcp://localhost:2375'
      fi
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - export LATEST_TAG=$(git describe --tags --abbrev=0)
    - export IMAGE_NAME_SHA=${CI_REGISTRY_IMAGE}:${LATEST_TAG}-${NAME_SUFFIX_SHA}

    - 'echo "Building based on latest tag: $LATEST_TAG"'
    - 'echo "Image name: $IMAGE_NAME_SHA"'

    - docker pull "${CI_REGISTRY_IMAGE}:${LATEST_TAG}" || true
    - docker buildx build
      --build-arg UPSTREAM_TAG=${LATEST_TAG}
      --cache-from ${CI_REGISTRY_IMAGE}:${LATEST_TAG}
      --tag $IMAGE_NAME_SHA
      --push
      -f Dockerfile.toothaus .

    - git checkout $CI_COMMIT_BRANCH
    - export DISTANCE_FROM_HEAD=$(git rev-list --count $CI_COMMIT_SHA..$CI_COMMIT_BRANCH)
    - 'echo "Distance from branch head of ${CI_COMMIT_BRANCH} branch: $DISTANCE_FROM_HEAD"'

    # Head commit of the branch, tag with latest per version tag
    - if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ] && [ $DISTANCE_FROM_HEAD -eq 0 ]; then
        echo 'Is default branch and head commit, tagging with :${LATEST_TAG}-latest';
        docker tag $IMAGE_NAME_SHA ${CI_REGISTRY_IMAGE}:${LATEST_TAG}-latest;
        docker push ${CI_REGISTRY_IMAGE}:${LATEST_TAG}-latest;
      fi
