version: '3'
services:

  db:
    restart: always
    image: postgres:alpine
### Uncomment to enable DB persistance
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:alpine
### Uncomment to enable REDIS persistance
    volumes:
      - ./redis:/data

  web:
    build: .
    image: gargron/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    volumes:
      - ./public/assets:/mastodon/public/assets
      - ./public/packs:/mastodon/public/packs
      - ./public/system:/mastodon/public/system

  streaming:
    build: .
    image: gargron/mastodon
    restart: always
    env_file: .env.production
    command: npm run start
    ports:
      - "4000:4000"
    depends_on:
      - db
      - redis

  sidekiq:
    build: .
    image: gargron/mastodon
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq -q default -q mailers -q pull -q push
    depends_on:
      - db
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  nginxserver:
    image: nginx:stable
    volumes:
      - ./nginx:/conf
      - ./public:/public
    depends_on:
      - web
      - streaming
    restart: always
    ports:
      - "8000:80"
    command: /bin/bash -c "cp -Rp /conf/* /etc/nginx/conf.d/ && nginx -g 'daemon off;'"

  https-portal:
      image: steveltn/https-portal:1.0.0
      ports:
        - '80:80'
        - '443:443'
      depends_on:
        - nginxserver
      restart: always
      environment:
        DOMAINS: 'akabe.co -> http://nginxserver'
        STAGE: 'production'
