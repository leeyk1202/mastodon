%tr
  %td.batch-checkbox
    = f.check_box :status_ids, { multiple: true, include_hidden: false }, status.id
  %td
    - unless status.spoiler_text.blank?
      %p
        %strong= Formatter.instance.format_spoiler(status)
      %p &nbsp;

    = Formatter.instance.format(status)

    - unless status.media_attachments.empty?
      - if status.media_attachments.first.video?
        - video = status.media_attachments.first
        = react_component :video, src: video.file.url(:original), preview: video.file.url(:small), sensitive: status.sensitive? && !current_account&.user&.setting_display_sensitive_media, width: 610, height: 343, inline: true
      - else
        = react_component :media_gallery, height: 343, sensitive: status.sensitive? && !current_account&.user&.setting_display_sensitive_media, 'autoPlayGif': current_account&.user&.setting_auto_play_gif, media: status.media_attachments.map { |a| ActiveModelSerializers::SerializableResource.new(a, serializer: REST::MediaAttachmentSerializer).as_json }
  %td{ style: 'padding: 0' }
    %table.table
      %tbody
        %tr
          %td= l status.created_at
        %tr
          %td
            = fa_visibility_icon(status)
            = t("statuses.visibilities.#{status.visibility}")
        - if status.sensitive?
          %tr
            %td
              = fa_icon('eye-slash fw')
              = t('stream_entries.sensitive_content')
